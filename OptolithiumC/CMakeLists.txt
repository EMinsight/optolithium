PROJECT("optolithiumc")
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
CMAKE_POLICY(SET CMP0015 NEW)

SET(CMAKE_USE_RELATIVE_PATHS ON)
SET(CMAKE_SKIP_RPATH TRUE)
SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)

SET(OPTOLITHIUMGUI_DIR "${CMAKE_HOME_DIRECTORY}/../OptolithiumGui")

SET(CMAKE_MODULE_PATH "${CMAKE_HOME_DIRECTORY}")
# SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${OPTOLITHIUMGUI_DIR}")
# SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${OPTOLITHIUMGUI_DIR}")

SET(OPTOLITHIUMC_DIR "src")
SET(LIBRARIES_DIR "libs")

SET(OPTOLITHIUMC_USE_FFTW_LIBRARY "ON")
# SET(OPTOLITHIUMC_USE_KISSFFT_LIBRARY "ON")
# SET(OPTOLITHIUMC_USE_FOURIER_LIBRARY "ON")

SET(EIKONAL_DIR "${LIBRARIES_DIR}/eikonal")
SET(CLIPPER_DIR "${LIBRARIES_DIR}/clipper")
SET(KISSFFT_DIR "${LIBRARIES_DIR}/kissfft")
SET(FOURIER_DIR "${LIBRARIES_DIR}/fourier")

ADD_DEFINITIONS(-DARMA_NO_DEBUG)
ADD_DEFINITIONS(-D_ELPP_DISABLE_PERFORMANCE_TRACKING)
ADD_DEFINITIONS(-D__NO_MINGW_LFS)

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -include cmath -std=gnu++11 -Wall")

SET(ARMADILLO_INCLUDE_DIR "${LIBRARIES_DIR}/armadillo/include/")
SET(ARMANPY_INCLUDE_DIR "${LIBRARIES_DIR}/armanpy/include")
SET(EASYLOGGING_INCLUDE_DIR "${LIBRARIES_DIR}/easylogging")
SET(EIKONAL_INCLUDE_DIR "${EIKONAL_DIR}/include")
SET(CLIPPER_INCLUDE_DIR "${CLIPPER_DIR}/include")

SET(CMAKE_BUILD_TYPE "Release")

FIND_PACKAGE(Threads REQUIRED)
FIND_PACKAGE(SWIG REQUIRED)
FIND_PACKAGE(PythonLibs 2.7 REQUIRED)
FIND_PACKAGE(NumPy REQUIRED)


IF (DEFINED OPTOLITHIUMC_USE_FFTW_LIBRARY)
    IF (WIN32)
        SET(FFTW_DIR "${LIBRARIES_DIR}/fftw3-win32")
        INCLUDE_DIRECTORIES(${FFTW_DIR})
    ELSE()
        FIND_PACKAGE(FFTW REQUIRED)
        INCLUDE_DIRECTORIES("${FFTW_INCLUDES}")
    ENDIF()
ELSEIF (DEFINED OPTOLITHIUMC_USE_KISSFFT_LIBRARY)
    ADD_SUBDIRECTORY(${KISSFFT_DIR})
    INCLUDE_DIRECTORIES("${KISSFFT_DIR}/include")
ELSEIF (DEFINED OPTOLITHIUMC_USE_FOURIER_LIBRARY)
    ADD_SUBDIRECTORY(${FOURIER_DIR})
    INCLUDE_DIRECTORIES("${FOURIER_DIR}/include")
ENDIF()


INCLUDE("${SWIG_USE_FILE}")

INCLUDE_DIRECTORIES("include")
INCLUDE_DIRECTORIES("${CMAKE_SOURCE_DIR}")
INCLUDE_DIRECTORIES("${PYTHON_INCLUDE_DIR}")
INCLUDE_DIRECTORIES("${ARMADILLO_INCLUDE_DIR}")
INCLUDE_DIRECTORIES("${ARMANPY_INCLUDE_DIR}")
INCLUDE_DIRECTORIES("${NUMPY_INCLUDE_DIRS}")
INCLUDE_DIRECTORIES("${EASYLOGGING_INCLUDE_DIR}")
INCLUDE_DIRECTORIES("${EIKONAL_INCLUDE_DIR}")
INCLUDE_DIRECTORIES("${CLIPPER_INCLUDE_DIR}")

ADD_SUBDIRECTORY("${EIKONAL_DIR}")
ADD_SUBDIRECTORY("${CLIPPER_DIR}")
ADD_SUBDIRECTORY("plugins")

# build the optolithiumc library
ADD_LIBRARY(optolithiumc STATIC
	"${OPTOLITHIUMC_DIR}/opl_log.cpp"
	"${OPTOLITHIUMC_DIR}/opl_geometry.cpp"
	"${OPTOLITHIUMC_DIR}/opl_contours.cpp"
	"${OPTOLITHIUMC_DIR}/opl_interp.cpp"
    "${OPTOLITHIUMC_DIR}/opl_capi.cpp"
    "${OPTOLITHIUMC_DIR}/opl_sim.cpp"
)

LINK_DIRECTORIES("${CLIPPER_DIR}")
TARGET_LINK_LIBRARIES(optolithiumc "eikonal")

IF (DEFINED OPTOLITHIUMC_USE_FFTW_LIBRARY)
    IF (WIN32)
        LINK_DIRECTORIES("${FFTW_DIR}")
        TARGET_LINK_LIBRARIES(optolithiumc "fftw3")
    ELSE()
        TARGET_LINK_LIBRARIES(optolithiumc ${FFTW_LIBRARIES})
    ENDIF()
    ADD_DEFINITIONS(-DOPTOLITHIUMC_USE_FFTW_LIBRARY)
ELSEIF (DEFINED OPTOLITHIUMC_USE_KISSFFT_LIBRARY)
    TARGET_LINK_LIBRARIES(optolithiumc "kissfft")
    ADD_DEFINITIONS(-DOPTOLITHIUMC_USE_KISSFFT_LIBRARY)
ELSEIF (DEFINED OPTOLITHIUMC_USE_FOURIER_LIBRARY)
    TARGET_LINK_LIBRARIES(optolithiumc "fourier")
    ADD_DEFINITIONS(-DOPTOLITHIUMC_USE_FOURIER_LIBRARY)
ENDIF()

# Swig shall but all stuff to the same directory where the *.so or *.pyd are placed
SET(CMAKE_SWIG_OUTDIR "${CMAKE_HOME_DIRECTORY}/build/")

# Set up the swig wrapper for optolithiumc
SET_SOURCE_FILES_PROPERTIES(optolithiumc.i PROPERTIES CPLUSPLUS ON)
SET_SOURCE_FILES_PROPERTIES(optolithiumc.i PROPERTIES SWIG_FLAGS "-ignoremissing;-w509")
SWIG_ADD_MODULE(optolithiumc python optolithiumc.i)
SWIG_LINK_LIBRARIES(optolithiumc optolithiumc ${PYTHON_LIBRARIES})

# Set up the swig wrapper for clipper
SET_SOURCE_FILES_PROPERTIES(clipper.i PROPERTIES CPLUSPLUS ON)
SET_SOURCE_FILES_PROPERTIES(clipper.i PROPERTIES SWIG_FLAGS "-ignoremissing;-w509")
SWIG_ADD_MODULE(clipper python clipper.i)
SWIG_LINK_LIBRARIES(clipper polyclipping ${PYTHON_LIBRARIES})

# Install stage
INSTALL(FILES "${CMAKE_SWIG_OUTDIR}/optolithiumc.py" DESTINATION "${OPTOLITHIUMGUI_DIR}")
INSTALL(FILES "${CMAKE_SWIG_OUTDIR}/clipper.py" DESTINATION "${OPTOLITHIUMGUI_DIR}")
INSTALL(TARGETS _optolithiumc _clipper LIBRARY DESTINATION "${OPTOLITHIUMGUI_DIR}")

# ADD_CUSTOM_COMMAND(TARGET _optolithiumc PRE_BUILD 
#     COMMAND ${CMAKE_COMMAND} -E remove ${CMAKE_HOME_DIRECTORY}/build/optolithiumcPYTHON_wrap.cxx
#     COMMAND ${CMAKE_COMMAND} -E remove "${OPTOLITHIUMGUI_DIR}/optolithiumc.py"
# )

# ADD_CUSTOM_COMMAND(TARGET _clipper PRE_BUILD
#    COMMAND ${CMAKE_COMMAND} -E remove ${CMAKE_HOME_DIRECTORY}/build/clipperPYTHON_wrap.cxx
#    COMMAND ${CMAKE_COMMAND} -E remove "${OPTOLITHIUMGUI_DIR}/clipper.py"
# )